/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Mechanic;



import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.awt.Font;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vamsimokari
 */
public class MechanicWorkSpace extends javax.swing.JPanel {

    /**
     * Creates new form MechanicWorkAreaPanel
     */
   
     JPanel userProcessContainer;
      String emp_id = null;String emp_name=null;
      enum status{
          Assigned,
          Required,
          Inprogress
      }
    
    public MechanicWorkSpace(JPanel userProcessContainer,String emp_id,String emp_name) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
       
        this.emp_id = emp_id;
        this.emp_name = emp_name;
        clientTable.getTableHeader().setFont(new Font("Arial",Font.BOLD,18));
        clientTable.setRowHeight(30);
       clientTable.setRowMargin(10);
        populateTable();
         MechanicLabelName.setText("Hello "+emp_name + "!");
    }
    
    
    DBObject object_remove;
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)clientTable.getModel();
        dtm.setRowCount(0);
         MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("ServiceCheckDB");
        DBCollection userCollection = db.getCollection("Mechanics");
        DBCursor cursor = null;
        cursor = userCollection.find();
        dtm.setRowCount(0);
        while(cursor.hasNext()){
            Object[] row = new Object[dtm.getColumnCount()];
            DBObject obj = cursor.next();
            if(obj.get("_id").equals(emp_id)){
                List<DBObject> list = (List)obj.get("clients");
                for(DBObject object : list){
                    row[0] = object.get("client_id");
                    row[1] = object.get("client_name");
                    List<DBObject> res = (List)object.get("serviceInfo");
                    for(DBObject l : res){
                        row[2] = l.get("serviceName");
//                        row[3] = l.get("serviceDate");
                        dtm.addRow(row);
                    }
                }
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        checkBtn = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();
        MechanicLabelName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jScrollPane1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        clientTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        clientTable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client Id", "Client name", "Service Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientTable.setRowHeight(20);
        clientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(clientTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(140, 140, 630, 180);

        checkBtn.setBackground(new java.awt.Color(115, 195, 137));
        checkBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        checkBtn.setText("Service done");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });
        add(checkBtn);
        checkBtn.setBounds(320, 380, 250, 40);

        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(imgLabel);
        imgLabel.setBounds(1280, 620, 0, 190);

        MechanicLabelName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        MechanicLabelName.setText("Hello Mechanic!");
        MechanicLabelName.setToolTipText("");
        add(MechanicLabelName);
        MechanicLabelName.setBounds(40, 40, 280, 40);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Your Clients");
        add(jLabel6);
        jLabel6.setBounds(320, 80, 220, 40);
    }// </editor-fold>//GEN-END:initComponents

    int flag = 0;
    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)clientTable.getModel();
        int selectedRow = clientTable.getSelectedRow();
        MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("ServiceCheckDB");
        DBCollection MechanicCollection = db.getCollection("Mechanics");
        DBCollection userCollection = db.getCollection("clients");
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }else{
            String client_id = (String) clientTable.getValueAt(selectedRow,0);
            String serviceName = (String) clientTable.getValueAt(selectedRow,2);
            DBCursor cursor = null;
            cursor = MechanicCollection.find();
            while(cursor.hasNext()){
                DBObject obj = cursor.next();
                if(obj.get("_id").equals(emp_id)){
                    List<DBObject> list = (List)obj.get("clients");
                    for(DBObject object : list){
                        if(object.get("client_id").toString().equals(client_id) ){
                            DBCursor cursor1 = null;
                            cursor1 = userCollection.find();
                            while(cursor1.hasNext()){
                            DBObject obj_new = cursor1.next();
                            List<DBObject> list_new = (List)object.get("serviceInfo");
                            for(DBObject object_new : list_new){
                                if(object_new.get("serviceName").toString().equals(serviceName)){
                                    object_remove = object;
//                                list.remove(object);
//                                   cursor.remove();
//                                obj.put("clients",list);
                                flag = 1;
                                break;
                            }
                              if(flag == 1)
                                  break;
                    }
                
             } 
                            if(flag == 1)
                                  break;
                                
//                                break;
                        }
                    }
                    if(flag == 1){
                        list.remove(object_remove);
                        obj.put("clients",list);
                        flag = 0;
                    }
                obj.put("clients",list);
                BasicDBObject query = new BasicDBObject();
                query.append("_id",emp_id);
                MechanicCollection.remove(query);
                MechanicCollection.insert(obj);
                }
                
            } 
            DBCursor cursor1 = null;
            cursor1 = userCollection.find();
            while(cursor1.hasNext()){
                DBObject obj = cursor1.next();
                if(obj.get("_id").equals(client_id)){
                    List<DBObject> list = (List)obj.get("serviceInfo");
                    for(DBObject object : list){
                        if(object.get("serviceName").toString().equals(serviceName)){
                                object.put("serviceStatus","Completed");
                                break;
                        }
                    }
                    obj.put("serviceInfo",list);
                    BasicDBObject query = new BasicDBObject();
                    query.append("_id",client_id);
                    userCollection.remove(query);
                    userCollection.insert(obj);
                }
                
            } 
            
            populateTable();
            JOptionPane.showMessageDialog(null, "Service completed successfully!", "Success",JOptionPane.PLAIN_MESSAGE);         
            
        }
       
    }//GEN-LAST:event_checkBtnActionPerformed

    private void clientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_clientTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MechanicLabelName;
    private javax.swing.JButton checkBtn;
    private javax.swing.JTable clientTable;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
